1. La liste de tous les utilisateurs ;
SELECT * FROM `users`;

2. La liste de tous les utilisateurs rangée par noms de famille ;
SELECT * FROM `users` ORDER BY last_name;

3. Le dernier utilisateur inscrit ;
SELECT * FROM `users` ORDER BY registration_date DESC LIMIT 1

4. La liste de tous les utilisateurs fêtant leur anniversaire ce mois-ci ;
SELECT * FROM `users` WHERE MONTH(users.birthdate) = MONTH(NOW())

5. Le nombre total d'utilisateurs ;
SELECT COUNT(*) FROM users

6. La liste de tous les utilisateurs associés à leurs villes respectives ;
SELECT users.id, users.first_name, users.last_name, addresses *
FROM users JOIN addresses 
ON users.address_id = addresses.id

7. La liste de tous les utilisateurs vivant à une adresse sans numéro ;
SELECT users.id, users*, addresses*
FROM users JOIN addresses 
ON users.address_id = addresses.id 
WHERE `addresses`.`number` IS NULL

8. La liste de tous les produits dont le prix est supérieur à 1 000 € ;
SELECT * FROM `products` WHERE products.price > 1000

9. La liste de tous les produits associés à leurs photos respectives ;
SELECT products.name, pictures.url 
FROM `products` JOIN pictures
ON products.id = pictures.product_id

10. La liste de tous les produits appartenant à la catégorie « Voyage » ;
SELECT products.* FROM ((`products` 
INNER JOIN products_categories ON products.id = products_categories.product_id) 
INNER JOIN categories ON products_categories.category_id = categories.id) 
WHERE categories.title = "VOYAGE"

11. La liste de tous les utilisateurs ayant effectué plus de dix commandes ;
SELECT users.* FROM users JOIN orders 
ON orders.user_id = users.id
GROUP BY orders.user_id
HAVING COUNT(orders.user_id)>10

12. La liste de tous les produits achetés par le premier utilisateur inscrit.
SELECT products.* FROM ((`products` 
INNER JOIN products_orders ON products.id = products_orders.product_id) 
INNER JOIN orders ON products_orders.order_id = orders.id) 
WHERE orders.user_id = (
    SELECT users.id
    FROM users
    ORDER BY registration_date ASC LIMIT 1
);